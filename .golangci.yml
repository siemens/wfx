# SPDX-FileCopyrightText: 2023 Siemens AG
#
# SPDX-License-Identifier: Apache-2.0
---
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # list of build tags, all linters use it. Default is empty list.
  build-tags:
    - testing
    - sqlite
    - postgres
    - mysql

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is
  # no need to include all autogenerated files, we confidently recognize
  # autogenerated files. If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-files: []

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  modules-download-mode: readonly

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: false

linters:
  enable:
    - decorder
    - dupword
    - errname
    - errorlint
    - exhaustive
    - exportloopref
    - gocheckcompilerdirectives
    - goconst
    - gocritic
    - gofumpt
    - importas
    - misspell
    - nilnil
    - prealloc
    - reassign
    - revive
    - stylecheck
    - tparallel
    - usestdlibvars
    - wrapcheck
    - zerologlint

linters-settings:
  staticcheck:
    go: "1.21"
    # https://staticcheck.io/docs/options#checks
    checks: ["all", "-ST1000", "-SA1019"]
  misspell:
    locale: US
  exhaustive:
    default-signifies-exhaustive: true
  wrapcheck:
    ignorePackageGlobs:
      - github.com/siemens/wfx/internal/errutil
      - google.golang.org/protobuf/*
      - io
  dupword:
    keywords:
      - "INSTALLING"
