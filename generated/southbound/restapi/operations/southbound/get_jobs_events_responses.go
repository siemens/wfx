// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package southbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/siemens/wfx/generated/model"
)

// GetJobsEventsOKCode is the HTTP code returned for type GetJobsEventsOK
const GetJobsEventsOKCode int = 200

/*
GetJobsEventsOK A stream of server-sent events

swagger:response getJobsEventsOK
*/
type GetJobsEventsOK struct {
}

// NewGetJobsEventsOK creates GetJobsEventsOK with default headers values
func NewGetJobsEventsOK() *GetJobsEventsOK {

	return &GetJobsEventsOK{}
}

// WriteResponse to the client
func (o *GetJobsEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// GetJobsEventsBadRequestCode is the HTTP code returned for type GetJobsEventsBadRequest
const GetJobsEventsBadRequestCode int = 400

/*
GetJobsEventsBadRequest Bad Request

swagger:response getJobsEventsBadRequest
*/
type GetJobsEventsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.ErrorResponse `json:"body,omitempty"`
}

// NewGetJobsEventsBadRequest creates GetJobsEventsBadRequest with default headers values
func NewGetJobsEventsBadRequest() *GetJobsEventsBadRequest {

	return &GetJobsEventsBadRequest{}
}

// WithPayload adds the payload to the get jobs events bad request response
func (o *GetJobsEventsBadRequest) WithPayload(payload *model.ErrorResponse) *GetJobsEventsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get jobs events bad request response
func (o *GetJobsEventsBadRequest) SetPayload(payload *model.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobsEventsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetJobsEventsNotFoundCode is the HTTP code returned for type GetJobsEventsNotFound
const GetJobsEventsNotFoundCode int = 404

/*
GetJobsEventsNotFound Not Found

swagger:response getJobsEventsNotFound
*/
type GetJobsEventsNotFound struct {

	/*
	  In: Body
	*/
	Payload *model.ErrorResponse `json:"body,omitempty"`
}

// NewGetJobsEventsNotFound creates GetJobsEventsNotFound with default headers values
func NewGetJobsEventsNotFound() *GetJobsEventsNotFound {

	return &GetJobsEventsNotFound{}
}

// WithPayload adds the payload to the get jobs events not found response
func (o *GetJobsEventsNotFound) WithPayload(payload *model.ErrorResponse) *GetJobsEventsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get jobs events not found response
func (o *GetJobsEventsNotFound) SetPayload(payload *model.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobsEventsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetJobsEventsDefault Other error with any status code and response body format

swagger:response getJobsEventsDefault
*/
type GetJobsEventsDefault struct {
	_statusCode int
}

// NewGetJobsEventsDefault creates GetJobsEventsDefault with default headers values
func NewGetJobsEventsDefault(code int) *GetJobsEventsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetJobsEventsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get jobs events default response
func (o *GetJobsEventsDefault) WithStatusCode(code int) *GetJobsEventsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get jobs events default response
func (o *GetJobsEventsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetJobsEventsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
