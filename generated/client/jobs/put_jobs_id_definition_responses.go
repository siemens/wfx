// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/siemens/wfx/generated/model"
)

// PutJobsIDDefinitionReader is a Reader for the PutJobsIDDefinition structure.
type PutJobsIDDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutJobsIDDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutJobsIDDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutJobsIDDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutJobsIDDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutJobsIDDefinitionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutJobsIDDefinitionOK creates a PutJobsIDDefinitionOK with default headers values
func NewPutJobsIDDefinitionOK() *PutJobsIDDefinitionOK {
	return &PutJobsIDDefinitionOK{}
}

/*
PutJobsIDDefinitionOK describes a response with status code 200, with default header values.

Job modified successfully
*/
type PutJobsIDDefinitionOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this put jobs Id definition o k response has a 2xx status code
func (o *PutJobsIDDefinitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put jobs Id definition o k response has a 3xx status code
func (o *PutJobsIDDefinitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put jobs Id definition o k response has a 4xx status code
func (o *PutJobsIDDefinitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put jobs Id definition o k response has a 5xx status code
func (o *PutJobsIDDefinitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put jobs Id definition o k response a status code equal to that given
func (o *PutJobsIDDefinitionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put jobs Id definition o k response
func (o *PutJobsIDDefinitionOK) Code() int {
	return 200
}

func (o *PutJobsIDDefinitionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionOK %s", 200, payload)
}

func (o *PutJobsIDDefinitionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionOK %s", 200, payload)
}

func (o *PutJobsIDDefinitionOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *PutJobsIDDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobsIDDefinitionBadRequest creates a PutJobsIDDefinitionBadRequest with default headers values
func NewPutJobsIDDefinitionBadRequest() *PutJobsIDDefinitionBadRequest {
	return &PutJobsIDDefinitionBadRequest{}
}

/*
PutJobsIDDefinitionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutJobsIDDefinitionBadRequest struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this put jobs Id definition bad request response has a 2xx status code
func (o *PutJobsIDDefinitionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put jobs Id definition bad request response has a 3xx status code
func (o *PutJobsIDDefinitionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put jobs Id definition bad request response has a 4xx status code
func (o *PutJobsIDDefinitionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put jobs Id definition bad request response has a 5xx status code
func (o *PutJobsIDDefinitionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put jobs Id definition bad request response a status code equal to that given
func (o *PutJobsIDDefinitionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put jobs Id definition bad request response
func (o *PutJobsIDDefinitionBadRequest) Code() int {
	return 400
}

func (o *PutJobsIDDefinitionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionBadRequest %s", 400, payload)
}

func (o *PutJobsIDDefinitionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionBadRequest %s", 400, payload)
}

func (o *PutJobsIDDefinitionBadRequest) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *PutJobsIDDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobsIDDefinitionNotFound creates a PutJobsIDDefinitionNotFound with default headers values
func NewPutJobsIDDefinitionNotFound() *PutJobsIDDefinitionNotFound {
	return &PutJobsIDDefinitionNotFound{}
}

/*
PutJobsIDDefinitionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutJobsIDDefinitionNotFound struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this put jobs Id definition not found response has a 2xx status code
func (o *PutJobsIDDefinitionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put jobs Id definition not found response has a 3xx status code
func (o *PutJobsIDDefinitionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put jobs Id definition not found response has a 4xx status code
func (o *PutJobsIDDefinitionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put jobs Id definition not found response has a 5xx status code
func (o *PutJobsIDDefinitionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put jobs Id definition not found response a status code equal to that given
func (o *PutJobsIDDefinitionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put jobs Id definition not found response
func (o *PutJobsIDDefinitionNotFound) Code() int {
	return 404
}

func (o *PutJobsIDDefinitionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionNotFound %s", 404, payload)
}

func (o *PutJobsIDDefinitionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] putJobsIdDefinitionNotFound %s", 404, payload)
}

func (o *PutJobsIDDefinitionNotFound) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *PutJobsIDDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobsIDDefinitionDefault creates a PutJobsIDDefinitionDefault with default headers values
func NewPutJobsIDDefinitionDefault(code int) *PutJobsIDDefinitionDefault {
	return &PutJobsIDDefinitionDefault{
		_statusCode: code,
	}
}

/*
PutJobsIDDefinitionDefault describes a response with status code -1, with default header values.

Other error with any status code and response body format.
*/
type PutJobsIDDefinitionDefault struct {
	_statusCode int
}

// IsSuccess returns true when this put jobs ID definition default response has a 2xx status code
func (o *PutJobsIDDefinitionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put jobs ID definition default response has a 3xx status code
func (o *PutJobsIDDefinitionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put jobs ID definition default response has a 4xx status code
func (o *PutJobsIDDefinitionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put jobs ID definition default response has a 5xx status code
func (o *PutJobsIDDefinitionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put jobs ID definition default response a status code equal to that given
func (o *PutJobsIDDefinitionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put jobs ID definition default response
func (o *PutJobsIDDefinitionDefault) Code() int {
	return o._statusCode
}

func (o *PutJobsIDDefinitionDefault) Error() string {
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] PutJobsIDDefinition default", o._statusCode)
}

func (o *PutJobsIDDefinitionDefault) String() string {
	return fmt.Sprintf("[PUT /jobs/{id}/definition][%d] PutJobsIDDefinition default", o._statusCode)
}

func (o *PutJobsIDDefinitionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
