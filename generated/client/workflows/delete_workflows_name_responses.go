// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/siemens/wfx/generated/model"
)

// DeleteWorkflowsNameReader is a Reader for the DeleteWorkflowsName structure.
type DeleteWorkflowsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteWorkflowsNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteWorkflowsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteWorkflowsNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteWorkflowsNameNoContent creates a DeleteWorkflowsNameNoContent with default headers values
func NewDeleteWorkflowsNameNoContent() *DeleteWorkflowsNameNoContent {
	return &DeleteWorkflowsNameNoContent{}
}

/*
DeleteWorkflowsNameNoContent describes a response with status code 204, with default header values.

The workflow has been deleted.
*/
type DeleteWorkflowsNameNoContent struct {
}

// IsSuccess returns true when this delete workflows name no content response has a 2xx status code
func (o *DeleteWorkflowsNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete workflows name no content response has a 3xx status code
func (o *DeleteWorkflowsNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflows name no content response has a 4xx status code
func (o *DeleteWorkflowsNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete workflows name no content response has a 5xx status code
func (o *DeleteWorkflowsNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflows name no content response a status code equal to that given
func (o *DeleteWorkflowsNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete workflows name no content response
func (o *DeleteWorkflowsNameNoContent) Code() int {
	return 204
}

func (o *DeleteWorkflowsNameNoContent) Error() string {
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] deleteWorkflowsNameNoContent", 204)
}

func (o *DeleteWorkflowsNameNoContent) String() string {
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] deleteWorkflowsNameNoContent", 204)
}

func (o *DeleteWorkflowsNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowsNameNotFound creates a DeleteWorkflowsNameNotFound with default headers values
func NewDeleteWorkflowsNameNotFound() *DeleteWorkflowsNameNotFound {
	return &DeleteWorkflowsNameNotFound{}
}

/*
DeleteWorkflowsNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteWorkflowsNameNotFound struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this delete workflows name not found response has a 2xx status code
func (o *DeleteWorkflowsNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflows name not found response has a 3xx status code
func (o *DeleteWorkflowsNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflows name not found response has a 4xx status code
func (o *DeleteWorkflowsNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflows name not found response has a 5xx status code
func (o *DeleteWorkflowsNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflows name not found response a status code equal to that given
func (o *DeleteWorkflowsNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete workflows name not found response
func (o *DeleteWorkflowsNameNotFound) Code() int {
	return 404
}

func (o *DeleteWorkflowsNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] deleteWorkflowsNameNotFound %s", 404, payload)
}

func (o *DeleteWorkflowsNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] deleteWorkflowsNameNotFound %s", 404, payload)
}

func (o *DeleteWorkflowsNameNotFound) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *DeleteWorkflowsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowsNameDefault creates a DeleteWorkflowsNameDefault with default headers values
func NewDeleteWorkflowsNameDefault(code int) *DeleteWorkflowsNameDefault {
	return &DeleteWorkflowsNameDefault{
		_statusCode: code,
	}
}

/*
DeleteWorkflowsNameDefault describes a response with status code -1, with default header values.

Other error with any status code and response body format.
*/
type DeleteWorkflowsNameDefault struct {
	_statusCode int
}

// IsSuccess returns true when this delete workflows name default response has a 2xx status code
func (o *DeleteWorkflowsNameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete workflows name default response has a 3xx status code
func (o *DeleteWorkflowsNameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete workflows name default response has a 4xx status code
func (o *DeleteWorkflowsNameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete workflows name default response has a 5xx status code
func (o *DeleteWorkflowsNameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete workflows name default response a status code equal to that given
func (o *DeleteWorkflowsNameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete workflows name default response
func (o *DeleteWorkflowsNameDefault) Code() int {
	return o._statusCode
}

func (o *DeleteWorkflowsNameDefault) Error() string {
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] DeleteWorkflowsName default", o._statusCode)
}

func (o *DeleteWorkflowsNameDefault) String() string {
	return fmt.Sprintf("[DELETE /workflows/{name}][%d] DeleteWorkflowsName default", o._statusCode)
}

func (o *DeleteWorkflowsNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
